stages:
  - pre
  - download

download:versions:
  image: registry.gitlab.com/jitesoft/dockerfiles/alpine:latest
  stage: pre
  variables:
    GIT_STRATEGY: none
  before_script:
    - apk add --no-cache libxml2-utils grep
  script:
    - HTML=$(wget -qO- https://golang.org/dl)
    - VERSIONS=$(echo ${HTML} | xmllint --html --xpath "//div[contains(@id, 'go') and contains(@class, 'toggle')]/@id" - 2>/dev/null)
    - echo "1- ${VERSIONS}"
    - VERSIONS=$(echo ${VERSIONS} | awk '{print $1 $2}')
    - echo "2- ${VERSIONS}"
    - VERSIONS=$(echo ${VERSIONS} | grep -oP '(?<=go)(([0-9]{0,3}(\.?)){3})')
    - echo "3- ${VERSIONS}"
    - VERSIONS=$(echo ${VERSIONS} | awk '{print $1}')
    - echo "Fetching checksums for ${VERSIONS}"
    - |
      for version in ${VERSIONS}; do
        echo "${HTML}" | xmllint --html --xpath "//a[contains(@class, 'download') and contains(@href, '${version}.src.tar.gz') and not(contains(@class, 'downloadBox'))]/parent::td/following-sibling::td[5]/tt/text()" - 2>/dev/null | echo -e "$(xargs echo) go${version}.src.tar.gz" >> sha256sum.txt
      done

  artifacts:
    paths:
      - sha256sum.txt
    expire_in: 1 day

download:src:
  image: registry.gitlab.com/jitesoft/dockerfiles/alpine:latest
  stage: download
  variables:
    GIT_STRATEGY: none
  dependencies:
    - download:versions
  before_script:
    - apk add --no-cache coreutils
  script:
    - |
      while read -r line
      do
        set -- $line
        wget https://dl.google.com/go/go${1}.src.tar.gz
      done <"sha256sum.txt"
    - sha256sum -c sha256sum.txt
  artifacts:
    paths:
      - /*.src.tar.gz
    expire_in: 1 day
