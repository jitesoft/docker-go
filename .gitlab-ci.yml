stages:
  - pre
  - download
  - build

download:versions:
  image: registry.gitlab.com/jitesoft/dockerfiles/alpine:latest
  stage: pre
  variables:
    GIT_STRATEGY: none
  before_script:
    - apk add --no-cache libxml2-utils grep
  script:
    - HTML=$(wget -qO- https://golang.org/dl)
    # For some reason, the build script would not work when running this with a pipe, so for now, it aught to be multi commands...
    - VERSIONS=$(echo ${HTML} | xmllint --html --xpath "//div[contains(@id, 'go') and contains(@class, 'toggle')]/@id" - 2>/dev/null)
    - VERSIONS=$(echo ${VERSIONS} | awk '{print $1, $2}')
    - VERSIONS=$(echo ${VERSIONS} | grep -oP '(?<=go)(([0-9]{0,3}(\.?)){3})')
    - |
      for VERSION in ${VERSIONS}; do
        OUTPUT=$(echo "${HTML}" | xmllint --html --xpath "//a[contains(@class, 'download') and contains(@href, '${VERSION}.src.tar.gz') and not(contains(@class, 'downloadBox'))]/parent::td/following-sibling::td[5]/tt/text()" - 2>/dev/null)
        echo "${OUTPUT} go${VERSION}.src.tar.gz" >> sha256sum.txt
      done
  artifacts:
    paths:
      - sha256sum.txt
    expire_in: 1 day

download:src:
  image: registry.gitlab.com/jitesoft/dockerfiles/alpine:latest
  stage: download
  variables:
    GIT_STRATEGY: none
  dependencies:
    - download:versions
  before_script:
    - apk add --no-cache coreutils
  script:
    - cat sha256sum.txt
    - |
      while read -r line
      do
        set -- $line
        wget "https://dl.google.com/go/${2}"
      done <"sha256sum.txt"
    - sha256sum -c sha256sum.txt
  artifacts:
    paths:
      - ${CI_PROJECT_DIR}/*.src.tar.gz
    expire_in: 1 day

.build:
  dependencies:
    - download:src
    - download:versions
  stage: build
  image: registry.gitlab.com/jitesoft/dockerfiles/docker:latest
  services:
    - registry.gitlab.com/jitesoft/dockerfiles/docker/dind:latest
  script:
    - docker build --build-arg VERSION=${VERSION} -t ${CI_REGISTRY_IMAGE}:${VERSION} .
    - docker push ${CI_REGISTRY_IMAGE}:${VERSION}

build:next:
  extends: .build
  before_script:
    - apk add --no-cache grep
    - echo ${CI_JOB_TOKEN} | docker login -u gitlab-ci-token registry.gitlab.com --password-stdin
    - echo ${DOCKER_HUB_PASSWORD} | docker login -u ${DOCKER_HUB_USER} --password-stdin
    - FILE=$(cat sha256sum.txt | awk '{print $2}' | head -1)
    - VERSION=$(echo ${FILE} | grep -oP '([0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3})')

build:prev:
  extends: .build
  before_script:
    - apk add --no-cache grep
    - echo ${CI_JOB_TOKEN} | docker login -u gitlab-ci-token registry.gitlab.com --password-stdin
    - echo ${DOCKER_HUB_PASSWORD} | docker login -u ${DOCKER_HUB_USER} --password-stdin
    - FILE=$(cat sha256sum.txt | awk '{print $2}' | tail -1)
    - VERSION=$(echo ${FILE} | grep -oP '([0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3})')
